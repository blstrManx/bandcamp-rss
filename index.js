import fs from 'fs-extra';
import path from 'path';
import { fileURLToPath } from 'url';
import { Feed } from 'feed';
import { scrapeArtistReleases } from './scraper.js';

// Get the directory name
const __dirname = path.dirname(fileURLToPath(import.meta.url));

// Path to the output directory (where GitHub Pages will serve from)
const outputDir = path.join(__dirname, '..', 'dist');

// Ensure the output directory exists
fs.ensureDirSync(outputDir);

async function generateFeed() {
  try {
    // Read the artists.json file
    const artistsFile = path.join(__dirname, '..', 'artists.json');
    const artistsData = await fs.readJson(artistsFile);
    const artists = artistsData.artists || [];

    if (artists.length === 0) {
      console.log('No artists found in artists.json');
      return;
    }

    // Create a new feed
    const feed = new Feed({
      title: "Artist Releases RSS Feed",
      description: "Latest releases from your favorite artists",
      id: "https://github.com/user/artist-rss-feed-generator",
      link: "https://github.com/user/artist-rss-feed-generator",
      language: "en",
      image: "https://example.com/image.png",
      favicon: "https://example.com/favicon.ico",
      copyright: `All rights reserved ${new Date().getFullYear()}`,
      updated: new Date(),
      generator: "Artist RSS Feed Generator",
      feedLinks: {
        json: "https://user.github.io/artist-rss-feed-generator/feed.json",
        atom: "https://user.github.io/artist-rss-feed-generator/atom.xml"
      },
      author: {
        name: "Artist RSS Feed Generator",
        email: "example@example.com",
        link: "https://github.com/user/artist-rss-feed-generator"
      }
    });

    // Process each artist and add their releases to the feed
    console.log(`Processing ${artists.length} artists...`);
    
    for (const artist of artists) {
      console.log(`Scraping releases for: ${artist.name}`);
      
      try {
        const releases = await scrapeArtistReleases(artist);
        
        // Add each release to the feed
        for (const release of releases) {
          feed.addItem({
            title: `${artist.name} - ${release.title}`,
            id: release.url,
            link: release.url,
            description: release.description || `New release by ${artist.name}`,
            content: release.description || `New release by ${artist.name}`,
            author: [
              {
                name: artist.name,
                link: artist.url
              }
            ],
            date: release.date || new Date(),
            image: release.image
          });
        }
        
        console.log(`Added ${releases.length} releases for ${artist.name}`);
      } catch (error) {
        console.error(`Error scraping ${artist.name}: ${error.message}`);
      }
    }

    // Generate the RSS feed XML
    const rssOutput = feed.rss2();
    
    // Write the feed to the output directory
    await fs.writeFile(path.join(outputDir, 'artists-feed.xml'), rssOutput);
    console.log(`RSS feed written to ${path.join(outputDir, 'artists-feed.xml')}`);
    
    // Create a simple index.html file
    const indexHtml = `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Artist RSS Feed Generator</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      line-height: 1.6;
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    .container {
      margin-top: 40px;
    }
    h1 {
      margin-bottom: 20px;
    }
    .feed-link {
      background-color: #f5f5f5;
      padding: 15px;
      border-radius: 5px;
      font-family: monospace;
      word-break: break-all;
    }
    .feed-link a {
      color: #0366d6;
      text-decoration: none;
    }
    .feed-link a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Artist RSS Feed Generator</h1>
    <p>This page hosts an automatically generated RSS feed for the latest releases from your favorite artists.</p>
    
    <h2>Subscribe to the RSS Feed</h2>
    <div class="feed-link">
      <a href="./artists-feed.xml">artists-feed.xml</a>
    </div>
    
    <h3>How to Use</h3>
    <p>Copy the link above and add it to your favorite RSS reader to stay updated with new releases.</p>
    
    <h3>Last Updated</h3>
    <p>This feed was last updated on: ${new Date().toLocaleString()}</p>
    
    <footer>
      <p>Generated by <a href="https://github.com/user/artist-rss-feed-generator">Artist RSS Feed Generator</a></p>
    </footer>
  </div>
</body>
</html>`;
    
    await fs.writeFile(path.join(outputDir, 'index.html'), indexHtml);
    console.log(`Index page written to ${path.join(outputDir, 'index.html')}`);

  } catch (error) {
    console.error('Error generating feed:', error);
    process.exit(1);
  }
}

// Run the feed generator
generateFeed();
